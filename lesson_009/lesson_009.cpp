#include <iostream>
using namespace std;

int val = 10;

void get_val() {
    cout << val << endl;
}

void counter() {
    static int a = 0;
    a++;
    cout << "Значение переменной a: " << a << endl;
}

int numb(int& b) {
    int c = 12;
    b = 21;
    return b, c;
}

int const_numb(const int& c) {
    // c = 21; // блокировка переназначения
    // c = 21; // блокировка переназначения
    return c;
}

int main()
{
    setlocale(LC_ALL, "");

    // Пример 1. Получение значения переменной напрямую
    cout << "Глобальная переменная: " << val << endl;

    // Пример 2. Получение значения переменной через блок
    if (1 < 2) {
        val = 12;
    }

    // Пример 3. Получение значения переменной через функцию
    get_val(); // Получение значения val

    /*
        Статическая область видимости
    
        Статическая область у блока: переменная не будет пересоздаваться, но её можно переназначить
        Глобальная статическая область: используется для ограничения доступа к чему то из другого файла
    */

    // Использование ссылки
    // Ссылочная переменная просто хранит в себе ссылку на адресную ячейку значения другой переменной

    int n = 5;
    cout << numb(n);
    int b = 21;
}
